'scopeName': 'source.st'
'name': 'ST/SCL'
'fileTypes': [
  'scl'
  'st'
]

'patterns': [
  {
    'include': '#comment'
  }
  {
    'include': '#string'
  }
  {
    'include': '#structure'
  }
  {
    'include': '#declaration'
  }
  {
    'include': '#statements'
  }
  {
    'include': '#types'
  }
  {
    'include': '#constants'
  }
]

'repository':
  'comment':
    'patterns': [
      {
        'begin': '\\(\\*'
        'end': '\\*\\)'
        'name': 'comment.block.st'
      }
      {
        'match': '//.*$'
        'name': 'comment.line.double-slash.st'
      }
    ]

  'structure':
    'patterns': [
      {
        'begin': '(?i)\\s*(ORGANIZATION_BLOCK)\\s+(\\b[A-Z_]+\\w{0,23}\\b)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'name': 'entity.name.function.st'
          '3':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_ORGANIZATION_BLOCK)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.organization-block.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(FUNCTION)\\s+(\\b[A-Z_]+\\w{0,23}\\b)(\\s*(:)\\s*(\\b[A-Z_]+\\w{0,23}\\b))?\\s*(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'name': 'entity.name.function.st'
          #'4':
            #'name': 'storage.type.st'
          '5':
            'name': 'storage.type.st'
          '6':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_FUNCTION)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.function.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(FUNCTION_BLOCK)\\s+(\\b[A-Z_]+\\w{0,23}\\b)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'name': 'entity.name.function.st'
          '3':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_FUNCTION_BLOCK)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.function-block.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(DATA_BLOCK)\\s+(\\b[A-Z_]+\\w{0,23}\\b)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'name': 'entity.name.function.st'
          '3':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_DATA_BLOCK)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.data-block.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(TYPE)\\s+(\\b[A-Z_]+\\w{0,23}\\b)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'name': 'entity.name.function.st'
          '3':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_TYPE)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.function.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.type.st'
        'patterns': [
          'include': '$self'
        ]
      }
    ]

  'declaration':
    'patterns': [
      {
        'begin': '(?i)\\s*(CONST)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.constant.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_CONST)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.constant.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.declaration.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(LABEL)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.label.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_LABEL)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.label.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.declaration.st'
        'patterns': [
          'include': '$self'
        ]
      }
      {
        'begin': '(?i)\\s*(VAR(_TEMP|_INPUT|_OUTPUT|_IN_OUT)?)(.*)$'
        'beginCaptures':
          '1':
            'name': 'storage.type.variable.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'end': '(?i)\\s*(END_VAR)(.*)$'
        'endCaptures':
          '1':
            'name': 'storage.type.variable.st'
          '2':
            'patterns': [
              {
                'include': '#comment'
              }
            ]
        'name': 'meta.declaration.st'
        'patterns': [
          'include': '$self'
        ]
      }
    ]

  'statements':
    'patterns': [
      {
        'match': '(?i)\\b(PROGRAM|IF|THEN|ELSIF|ELSE|CASE|OF|FOR|TO|BY|WHILE|DO|REPEAT|UNTIL|CONTINUE|EXIT|GOTO|RETURN|END_(PROGRAM|IF|CASE|FOR|WHILE|REPEAT))\\b'
        'name': 'keyword.control.st'
      }
    ]

  'types':
    'patterns': [
      {
        'match': '(?i)\\b(BOOL|BYTE|WORD|DWORD|CHAR|INT|DINT|REAL|S5TIME|TIME|DATE|TIME_OF_DAY|DATE_AND_TIME|STRING|ARRAY|STRUCT|TIMER|COUNTER|BLOCK_(FB|FC|DB|SDB)|ANY|POINTER)\\b'
        'name': 'storage.type.st'
      }
    ]

  'constants':
    'patterns': [
      {
        'match': '\\W((2#[0-1]+[0-1_]*)|(16#[0-9A-F]+[0-9A-F_]*)|(8#[0-8]+[0-8_]*))\\W'
        'name': 'constant.numeric.st'
      }
      {
        'match': '(?i)\\W((([+-]?[0-9]+[0-9_]*)(\\.[0-9]+[0-9_]*)?)(E[+-]?[0-9]+[0-9_]*)?)\\W'
        'name': 'constant.numeric.st'
      }
    ]

  'string':
    'patterns': [
      {
        'begin': '\''
        'end': '\''
        'name': 'string.quoted.single.krl'
      }
    ]
